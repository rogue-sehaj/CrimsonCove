{"ast":null,"code":"var _jsxFileName = \"/Users/sb/Desktop/MARK 85/CrimsonCove/frontend/src/components/Package/SubscribePackage.js\";\nimport React from 'react';\nimport packageService from '../../services/packageService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubscribePackage = ({\n  token\n}) => {\n  const subscribePackage = async () => {\n    const packageType = prompt('Enter package type (e.g., Basic, Premium)');\n    const deliveryDate = prompt('Enter delivery date (YYYY-MM-DD)');\n    try {\n      await packageService.subscribePackage(token, packageType, deliveryDate);\n      alert('Subscribed to package');\n    } catch (error) {\n      alert('Failed to subscribe to package');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-info\",\n      onClick: subscribePackage,\n      children: \"Subscribe to Package\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = SubscribePackage;\nexport default SubscribePackage;\nvar _c;\n$RefreshReg$(_c, \"SubscribePackage\");","map":{"version":3,"names":["React","packageService","jsxDEV","_jsxDEV","SubscribePackage","token","subscribePackage","packageType","prompt","deliveryDate","alert","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sb/Desktop/MARK 85/CrimsonCove/frontend/src/components/Package/SubscribePackage.js"],"sourcesContent":["import React from 'react';\nimport packageService from '../../services/packageService';\n\nconst SubscribePackage = ({ token }) => {\n    const subscribePackage = async () => {\n        const packageType = prompt('Enter package type (e.g., Basic, Premium)');\n        const deliveryDate = prompt('Enter delivery date (YYYY-MM-DD)');\n        try {\n            await packageService.subscribePackage(token, packageType, deliveryDate);\n            alert('Subscribed to package');\n        } catch (error) {\n            alert('Failed to subscribe to package');\n        }\n    };\n\n    return (\n        <div className=\"card p-4\">\n            <button className=\"btn btn-info\" onClick={subscribePackage}>Subscribe to Package</button>\n        </div>\n    );\n};\n\nexport default SubscribePackage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACpC,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,WAAW,GAAGC,MAAM,CAAC,2CAA2C,CAAC;IACvE,MAAMC,YAAY,GAAGD,MAAM,CAAC,kCAAkC,CAAC;IAC/D,IAAI;MACA,MAAMP,cAAc,CAACK,gBAAgB,CAACD,KAAK,EAAEE,WAAW,EAAEE,YAAY,CAAC;MACvEC,KAAK,CAAC,uBAAuB,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZD,KAAK,CAAC,gCAAgC,CAAC;IAC3C;EACJ,CAAC;EAED,oBACIP,OAAA;IAAKS,SAAS,EAAC,UAAU;IAAAC,QAAA,eACrBV,OAAA;MAAQS,SAAS,EAAC,cAAc;MAACE,OAAO,EAAER,gBAAiB;MAAAO,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxF,CAAC;AAEd,CAAC;AAACC,EAAA,GAjBIf,gBAAgB;AAmBtB,eAAeA,gBAAgB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}